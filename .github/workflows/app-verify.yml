name: Verify App

on: 
  pull_request:
    paths-ignore:
      - 'docs/**'

jobs:
  verify-build:
    name: Verify + Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 10

      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache npm dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Install Dependencies
        env:
          CYPRESS_INSTALL_BINARY: 0 # Skip installing of cypress
        run: |
          yarn install --frozen-lockfile
          yarn --cwd functions install --frozen-lockfile

      - name: Archive Error Logs
        uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: error-logs
          path: yarn-error.log

      - name: Build App Config
        env:
          GITHUB_HEAD_REF: ${{ github.head_ref }}
          GITHUB_REF: ${{ github.ref }}
        run: yarn build:config

      - name: Verify
        run: yarn lint

      - name: Run Unit Tests
        run: |
          yarn --cwd functions test:cov

      - name: Build App
        run: |
          export REACT_APP_FIREBASE_DATABASE_EMULATOR_HOST="localhost:$(cat firebase.json | jq .emulators.database.port)"
          export REACT_APP_FIRESTORE_EMULATOR_HOST="localhost:$(cat firebase.json | jq .emulators.firestore.port)"
          yarn build

      - name: Build Functions
        run: yarn --cwd functions build

      - name: Archive Build Artifact
        uses: actions/upload-artifact@v1
        with:
          name: build
          path: build

  ui-tests:
    name: UI Test Emulated App
    needs: verify-build
    runs-on: ubuntu-16.04
    strategy:
      # Keep all in-progress jobs running if any matrix job fails. Needed to prevent
      # the Cypress Dashboard from being stuck in "in progress" state since not all tests run.
      # See the following for more details:
      # * Cypress Action Issue: https://github.com/cypress-io/github-action/issues/48
      # * Docs for fail-fast: https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idstrategyfail-fast
      fail-fast: false
      matrix:
        # Run multiple copies of the current job in parallel
        containers: [1, 2, 3, 4]
    steps:
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 10

      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Get Library Versions For Binary Caching
        id: dep-versions
        run: |
          echo "::set-output name=firebase-tools::$(yarn info firebase-tools version --silent)"

      - name: Cache Firebase Emulator Binaries
        uses: actions/cache@v1
        with:
          path: ~/.cache/firebase/emulators
          key: ${{ runner.os }}-firebase-${{ steps.dep-versions.outputs.firebase-tools }}

      - name: Set Test Environment Settings
        id: emulator-settings
        env:
          GITHUB_HEAD_REF: ${{ github.head_ref }}
          GITHUB_REF: ${{ github.ref }}
        run: |
          export GIT_BRANCH=${GITHUB_REF##*/}
          export GCLOUD_PROJECT=$(cat .firebaserc | jq -r --arg GIT_BRANCH "$GIT_BRANCH" '.projects[$GIT_BRANCH] // .projects.master')
          echo "::set-env name=GCLOUD_PROJECT::$GCLOUD_PROJECT"
          echo "Environment set for branch: $GIT_BRANCH and project: $GCLOUD_PROJECT"
          echo "Setting emulator settings to environment..."
          echo "::set-env name=FIREBASE_DATABASE_EMULATOR_HOST::localhost:$(cat firebase.json | jq .emulators.database.port)"
          echo "::set-env name=FIRESTORE_EMULATOR_HOST::localhost:$(cat firebase.json | jq .emulators.firestore.port)"
          echo "::set-env name=CYPRESS_BASE_URL::http://localhost:$(cat package.json | jq .config.port)"
          echo "Generating Service Account File..."
          echo "$(echo $SERVICE_ACCOUNT | jq .)" > $HOME/serviceAccount.json
          echo "::set-env name=GOOGLE_APPLICATION_CREDENTIALS::$HOME/serviceAccount.json"

      - name: Download Build Artifact
        uses: actions/download-artifact@v1
        with:
          name: build
          path: build

      # Cypress action manages installing/caching npm dependencies and Cypress binary.
      # Because of "record" and "parallel" parameters these containers will load
      # balance all found tests among themselves. The step tests a version of the app
      # which is running locally in the container on port 3000
      - name: Cypress Run
        uses: cypress-io/github-action@v1
        with:
          browser: chrome
          parallel: true
          record: true
          headless: true
          group: 'UI Integration Tests'
          tag: emulated
          start: yarn emulate:all --project fireadmin-stage
          wait-on: 'http://localhost:3000'
          wait-on-timeout: 120
        env:
          TZ: America/Los_Angeles
          CI: true
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_KEY }}
          GITHUB_HEAD_REF: ${{ github.head_ref }}
          GITHUB_REF: ${{ github.ref }}
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
          CYPRESS_TEST_UID: ${{ secrets.TEST_UID }}